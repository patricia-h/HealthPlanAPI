// <auto-generated />
using System;
using HealthPlanAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthPlanAPI.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20220407084840_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HealthPlanAPI.Models.Beneficiary", b =>
                {
                    b.Property<int>("BeneficiaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<double>("Height")
                        .HasColumnType("double");

                    b.Property<int>("MeditatedHours")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<long>("TaxNumber")
                        .HasColumnType("bigint");

                    b.Property<double>("Weight")
                        .HasColumnType("double");

                    b.HasKey("BeneficiaryId");

                    b.HasIndex("PlanId");

                    b.ToTable("Beneficiary");
                });

            modelBuilder.Entity("HealthPlanAPI.Models.Plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PlanOperatorId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("PlanId");

                    b.HasIndex("PlanOperatorId");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("HealthPlanAPI.Models.PlanOperator", b =>
                {
                    b.Property<int>("PlanOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<long>("TaxNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("TradingName")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("PlanOperatorId");

                    b.ToTable("PlanOperator");
                });

            modelBuilder.Entity("HealthPlanAPI.Models.Beneficiary", b =>
                {
                    b.HasOne("HealthPlanAPI.Models.Plan", "Plan")
                        .WithMany("Beneficiaries")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("HealthPlanAPI.Models.Plan", b =>
                {
                    b.HasOne("HealthPlanAPI.Models.PlanOperator", "PlanOperator")
                        .WithMany("Plans")
                        .HasForeignKey("PlanOperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanOperator");
                });

            modelBuilder.Entity("HealthPlanAPI.Models.Plan", b =>
                {
                    b.Navigation("Beneficiaries");
                });

            modelBuilder.Entity("HealthPlanAPI.Models.PlanOperator", b =>
                {
                    b.Navigation("Plans");
                });
#pragma warning restore 612, 618
        }
    }
}
